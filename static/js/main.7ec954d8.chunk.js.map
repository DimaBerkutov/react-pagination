{"version":3,"sources":["components/TagsSlider/reducer.ts","components/TagsSlider/index.tsx","pages/index.tsx","index.tsx"],"names":["TYPES","initialState","selectedIndex","slides","reducer","state","action","type","TAG_POSITIONS","data","id","name","TagsSlider","windowSize","slidesListRef","useRef","slidesRef","useReducer","dispatch","goHandler","val","block","current","blockPos","getBoundingClientRect","slidesArr","children","scrollPagination","slideId","selectedBlockPos","scrollTo","scrollBy","x","width","length","onScroll","slidesShowAr","map","elem","elemPos","useEffect","className","onClick","ref","item","index","key","App","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ec954d8.chunk.js","sourcesContent":["export const TYPES = {\r\n  SET_SELECTED_INDEX: 'SET_SELECTED_INDEX',\r\n  SET_SLIDES: 'SET_SLIDES',\r\n};\r\n\r\ninterface TagsSliderReducer {\r\n  selectedIndex: number;\r\n  slides: boolean[];\r\n}\r\n\r\nexport const initialState: TagsSliderReducer = {\r\n  selectedIndex: 1,\r\n  slides: [],\r\n}\r\n\r\nexport default function reducer(state = initialState, action: any): TagsSliderReducer {\r\n  switch (action.type) {\r\n    case TYPES.SET_SELECTED_INDEX:\r\n      return {\r\n        ...state,\r\n        selectedIndex: action.selectedIndex,\r\n      };\r\n    case TYPES.SET_SLIDES:\r\n      return {\r\n        ...state,\r\n        slides: action.slides,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useEffect, useReducer, useRef } from 'react';\r\n\r\nimport reducer, { initialState, TYPES } from './reducer';\r\nimport './style.scss';\r\n\r\nexport interface Slide {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport const TAG_POSITIONS = {\r\n  FIRST: 'FIRST',\r\n  LAST: 'LAST',\r\n  SELECTED: 'SELECTED',\r\n};\r\n\r\nconst data: Slide[] = [\r\n  {\r\n    id: '1',\r\n    name: 'All',\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'New',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Popular',\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Keno',\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Table',\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Lottery',\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Prices',\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'Top list',\r\n  },\r\n];\r\n\r\nexport default function TagsSlider({ windowSize }: any): any {\r\n  const slidesListRef: React.MutableRefObject<any> = useRef(null);\r\n  const slidesRef: React.MutableRefObject<any> = useRef(null);\r\n  const [{ selectedIndex, slides }, dispatch] = useReducer<React.Reducer<any, any>>(\r\n    reducer,\r\n    initialState,\r\n  );\r\n\r\n  function goHandler(val: number): void {\r\n    const block = slidesListRef.current;\r\n    const blockPos = block.getBoundingClientRect();\r\n    const slidesArr = [...block.children];\r\n\r\n    if (val < 1) {\r\n      dispatch({ type: TYPES.SET_SELECTED_INDEX, selectedIndex: data.length });\r\n      scrollPagination(data.length, TAG_POSITIONS.LAST);\r\n    } else if (val > data.length) {\r\n      dispatch({ type: TYPES.SET_SELECTED_INDEX, selectedIndex: 1 });\r\n      scrollPagination(1, TAG_POSITIONS.FIRST);\r\n    } else {\r\n      dispatch({ type: TYPES.SET_SELECTED_INDEX, selectedIndex: val });\r\n      scrollPagination(val, TAG_POSITIONS.SELECTED);\r\n    }\r\n\r\n    function scrollPagination(slideId: number, type: string) {\r\n      const selectedBlockPos = slidesArr[slideId - 1]?.getBoundingClientRect();\r\n\r\n      if (type === TAG_POSITIONS.FIRST) {\r\n        block.scrollTo(0, 0);\r\n      } else if (type === TAG_POSITIONS.LAST) {\r\n        block.scrollBy(selectedBlockPos.x - blockPos.x, 0)\r\n      } else if (selectedBlockPos.x < blockPos.x) {\r\n        block.scrollBy(-selectedBlockPos.width, 0);\r\n      } else if (blockPos.x + blockPos.width < selectedBlockPos.x + selectedBlockPos.width) {\r\n        block.scrollBy(selectedBlockPos.width, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  function goPrevHandler() {\r\n    goHandler(selectedIndex - 1)\r\n  }\r\n\r\n  function goNextHandler() {\r\n    goHandler(selectedIndex + 1)\r\n  }\r\n\r\n  function onScroll(): void {\r\n    const block = slidesListRef.current;\r\n    const blockPos = block.getBoundingClientRect();\r\n    const slidesArr = [...block.children];\r\n\r\n    const slidesShowAr: boolean[] = slidesArr.map((elem: HTMLButtonElement): boolean => {\r\n      const elemPos = elem.getBoundingClientRect();\r\n      return blockPos.x <= elemPos.x && elemPos.x + elemPos.width < blockPos.x + blockPos.width;\r\n    });\r\n    dispatch({ type: TYPES.SET_SLIDES, slides: slidesShowAr });\r\n  }\r\n\r\n  useEffect(() => onScroll(), [windowSize[0]]);\r\n\r\n  return data?.length ? (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"slider-button\"\r\n        onClick={goPrevHandler}\r\n      >\r\n        <span className=\"slider-button__text\">{'<<'}</span>\r\n      </button>\r\n      <div className=\"slider__list\" ref={slidesListRef} onScroll={onScroll}>\r\n        {data.map((item: Slide, index: number) =>\r\n          <button\r\n            key={item.id}\r\n            ref={slidesRef}\r\n            className={`slider-button ${index + 1 === selectedIndex ? 'is-selected' : ''} ${!slides[index] ? 'is-hidden' : ''}`}\r\n            onClick={() => goHandler(index + 1)}\r\n          >\r\n            <span className=\"slider-button__text\">{item.name}</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n      <button\r\n        className=\"slider-button\"\r\n        onClick={goNextHandler}\r\n      >\r\n        <span className=\"slider-button__text\">{'>>'}</span>\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react';\r\n\r\nimport TagsSlider from \"components/TagsSlider\";\r\n\r\nimport 'scss/base.scss';\r\nimport './index.scss';\r\n\r\nexport default function App() {\r\n  const [size, setSize] = useState<number[]>([0, 0]);\r\n\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n\r\n    updateSize();\r\n    window.addEventListener('resize', updateSize);\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <TagsSlider windowSize={size}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './pages/index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}